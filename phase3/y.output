Terminals unused in grammar

   END


Rules useless in parser due to conflicts

    3 Functions: Function


State 4 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: Functions

    2 Functions: %empty
    3          | Function
    4          | Function Functions

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    6 Declarations: declaration SEMICOLON Declarations
    7             | %empty

    8 declaration: Identifiers COLON ENUM L_PAREN Identifiers R_PAREN
    9            | Identifiers COLON INTEGER
   10            | Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 Identifiers: identifier
   12            | identifier COMMA Identifiers

   13 identifier: IDENT

   14 Statements: statement SEMICOLON Statements
   15           | statement SEMICOLON

   16 statement: Var ASSIGN Expression
   17          | IF Bool_Expr THEN Statements ENDIF
   18          | IF Bool_Expr THEN Statements ELSE Statements ENDIF
   19          | WHILE Bool_Expr BEGIN_LOOP Statements END_LOOP
   20          | DO BEGIN_LOOP Statements END_LOOP WHILE Bool_Expr
   21          | READ Vars
   22          | WRITE Vars
   23          | CONTINUE
   24          | RETURN Expression

   25 Vars: Var
   26     | Var COMMA Vars

   27 Var: identifier
   28    | identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

   29 Bool_Expr: Relation_And_Expr OR Bool_Expr
   30          | Relation_And_Expr

   31 Relation_And_Expr: Relation_Expr AND Relation_And_Expr
   32                  | Relation_Expr

   33 Relation_Expr: Expression Comp Expression
   34              | TRUE
   35              | FALSE
   36              | L_PAREN Bool_Expr R_PAREN
   37              | NOT Expression Comp Expression
   38              | NOT TRUE
   39              | NOT FALSE
   40              | NOT L_PAREN Bool_Expr R_PAREN

   41 Comp: EQ
   42     | NEQ
   43     | LT
   44     | GT
   45     | GTE
   46     | LTE

   47 Expressions: %empty
   48            | Expression
   49            | Expression COMMA Expressions

   50 Expression: Multiplicative_Expr
   51           | Multiplicative_Expr ADD Expression
   52           | Multiplicative_Expr SUB Expression

   53 Multiplicative_Expr: Term
   54                    | Term MULT Multiplicative_Expr
   55                    | Term DIV Multiplicative_Expr
   56                    | Term MOD Multiplicative_Expr

   57 Term: Var
   58     | SUB Var
   59     | NUMBER
   60     | SUB NUMBER
   61     | L_PAREN Expression R_PAREN
   62     | SUB L_PAREN Expression R_PAREN
   63     | identifier L_PAREN Expressions R_PAREN


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 9 10
ARRAY (266) 10
ENUM (267) 8
OF (268) 10
IF (269) 17 18
THEN (270) 17 18
ENDIF (271) 17 18
ELSE (272) 18
WHILE (273) 19 20
DO (274) 20
BEGIN_LOOP (275) 19 20
END_LOOP (276) 19 20
CONTINUE (277) 23
READ (278) 21
WRITE (279) 22
AND (280) 31
OR (281) 29
NOT (282) 37 38 39 40
TRUE (283) 34 38
FALSE (284) 35 39
RETURN (285) 24
SUB (286) 52 58 60 62
ADD (287) 51
MULT (288) 54
DIV (289) 55
MOD (290) 56
EQ (291) 41
NEQ (292) 42
LT (293) 43
GT (294) 44
LTE (295) 46
GTE (296) 45
SEMICOLON (297) 5 6 14 15
COLON (298) 8 9 10
COMMA (299) 12 26 49
L_PAREN (300) 8 36 40 61 62 63
R_PAREN (301) 8 36 40 61 62 63
L_SQUARE_BRACKET (302) 10 28
R_SQUARE_BRACKET (303) 10 28
ASSIGN (304) 16
END (305)
IDENT (306) 13
NUMBER (307) 10 59 60


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
prog_start (54)
    on left: 1, on right: 0
Functions (55)
    on left: 2 3 4, on right: 1 4
Function (56)
    on left: 5, on right: 3 4
Declarations (57)
    on left: 6 7, on right: 5 6
declaration (58)
    on left: 8 9 10, on right: 6
Identifiers (59)
    on left: 11 12, on right: 8 9 10 12
identifier (60)
    on left: 13, on right: 5 11 12 27 28 63
Statements (61)
    on left: 14 15, on right: 5 14 17 18 19 20
statement (62)
    on left: 16 17 18 19 20 21 22 23 24, on right: 14 15
Vars (63)
    on left: 25 26, on right: 21 22 26
Var (64)
    on left: 27 28, on right: 16 25 26 57 58
Bool_Expr (65)
    on left: 29 30, on right: 17 18 19 20 29 36 40
Relation_And_Expr (66)
    on left: 31 32, on right: 29 30 31
Relation_Expr (67)
    on left: 33 34 35 36 37 38 39 40, on right: 31 32
Comp (68)
    on left: 41 42 43 44 45 46, on right: 33 37
Expressions (69)
    on left: 47 48 49, on right: 49 63
Expression (70)
    on left: 50 51 52, on right: 16 24 28 33 37 48 49 51 52 61 62
Multiplicative_Expr (71)
    on left: 53 54 55 56, on right: 50 51 52 54 55 56
Term (72)
    on left: 57 58 59 60 61 62 63, on right: 53 54 55 56


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    prog_start  go to state 2
    Functions   go to state 3
    Function    go to state 4


State 1

    5 Function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: Functions .

    $default  reduce using rule 1 (prog_start)


State 4

    3 Functions: Function .
    4          | Function . Functions

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 2 (Functions)
    $end      [reduce using rule 3 (Functions)]
    $default  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

   13 identifier: IDENT .

    $default  reduce using rule 13 (identifier)


State 6

    5 Function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 9

    5 Function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declarations)

    Declarations  go to state 11
    declaration   go to state 12
    Identifiers   go to state 13
    identifier    go to state 14


State 11

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    6 Declarations: declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 13

    8 declaration: Identifiers . COLON ENUM L_PAREN Identifiers R_PAREN
    9            | Identifiers . COLON INTEGER
   10            | Identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 17


State 14

   11 Identifiers: identifier .
   12            | identifier . COMMA Identifiers

    COMMA  shift, and go to state 18

    $default  reduce using rule 11 (Identifiers)


State 15

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    6 Declarations: declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declarations)

    Declarations  go to state 20
    declaration   go to state 12
    Identifiers   go to state 13
    identifier    go to state 14


State 17

    8 declaration: Identifiers COLON . ENUM L_PAREN Identifiers R_PAREN
    9            | Identifiers COLON . INTEGER
   10            | Identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22
    ENUM     shift, and go to state 23


State 18

   12 Identifiers: identifier COMMA . Identifiers

    IDENT  shift, and go to state 5

    Identifiers  go to state 24
    identifier   go to state 14


State 19

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 7 (Declarations)

    Declarations  go to state 25
    declaration   go to state 12
    Identifiers   go to state 13
    identifier    go to state 14


State 20

    6 Declarations: declaration SEMICOLON Declarations .

    $default  reduce using rule 6 (Declarations)


State 21

    9 declaration: Identifiers COLON INTEGER .

    $default  reduce using rule 9 (declaration)


State 22

   10 declaration: Identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 26


State 23

    8 declaration: Identifiers COLON ENUM . L_PAREN Identifiers R_PAREN

    L_PAREN  shift, and go to state 27


State 24

   12 Identifiers: identifier COMMA Identifiers .

    $default  reduce using rule 12 (Identifiers)


State 25

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 28


State 26

   10 declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 27

    8 declaration: Identifiers COLON ENUM L_PAREN . Identifiers R_PAREN

    IDENT  shift, and go to state 5

    Identifiers  go to state 30
    identifier   go to state 14


State 28

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 31


State 29

   10 declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 32


State 30

    8 declaration: Identifiers COLON ENUM L_PAREN Identifiers . R_PAREN

    R_PAREN  shift, and go to state 33


State 31

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    identifier  go to state 41
    Statements  go to state 42
    statement   go to state 43
    Var         go to state 44


State 32

   10 declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 45


State 33

    8 declaration: Identifiers COLON ENUM L_PAREN Identifiers R_PAREN .

    $default  reduce using rule 8 (declaration)


State 34

   17 statement: IF . Bool_Expr THEN Statements ENDIF
   18          | IF . Bool_Expr THEN Statements ELSE Statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 54
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 57
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 35

   19 statement: WHILE . Bool_Expr BEGIN_LOOP Statements END_LOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 60
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 57
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 36

   20 statement: DO . BEGIN_LOOP Statements END_LOOP WHILE Bool_Expr

    BEGIN_LOOP  shift, and go to state 61


State 37

   23 statement: CONTINUE .

    $default  reduce using rule 23 (statement)


State 38

   21 statement: READ . Vars

    IDENT  shift, and go to state 5

    identifier  go to state 41
    Vars        go to state 62
    Var         go to state 63


State 39

   22 statement: WRITE . Vars

    IDENT  shift, and go to state 5

    identifier  go to state 41
    Vars        go to state 64
    Var         go to state 63


State 40

   24 statement: RETURN . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 66
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 41

   27 Var: identifier .
   28    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 27 (Var)


State 42

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 68


State 43

   14 Statements: statement . SEMICOLON Statements
   15           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 69


State 44

   16 statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 70


State 45

   10 declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 46

   37 Relation_Expr: NOT . Expression Comp Expression
   38              | NOT . TRUE
   39              | NOT . FALSE
   40              | NOT . L_PAREN Bool_Expr R_PAREN

    TRUE     shift, and go to state 72
    FALSE    shift, and go to state 73
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 74
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 75
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 47

   34 Relation_Expr: TRUE .

    $default  reduce using rule 34 (Relation_Expr)


State 48

   35 Relation_Expr: FALSE .

    $default  reduce using rule 35 (Relation_Expr)


State 49

   58 Term: SUB . Var
   60     | SUB . NUMBER
   62     | SUB . L_PAREN Expression R_PAREN

    L_PAREN  shift, and go to state 76
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 77

    identifier  go to state 41
    Var         go to state 78


State 50

   36 Relation_Expr: L_PAREN . Bool_Expr R_PAREN
   61 Term: L_PAREN . Expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 79
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 80
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 51

   59 Term: NUMBER .

    $default  reduce using rule 59 (Term)


State 52

   27 Var: identifier .
   28    | identifier . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   63 Term: identifier . L_PAREN Expressions R_PAREN

    L_PAREN           shift, and go to state 81
    L_SQUARE_BRACKET  shift, and go to state 67

    $default  reduce using rule 27 (Var)


State 53

   57 Term: Var .

    $default  reduce using rule 57 (Term)


State 54

   17 statement: IF Bool_Expr . THEN Statements ENDIF
   18          | IF Bool_Expr . THEN Statements ELSE Statements ENDIF

    THEN  shift, and go to state 82


State 55

   29 Bool_Expr: Relation_And_Expr . OR Bool_Expr
   30          | Relation_And_Expr .

    OR  shift, and go to state 83

    $default  reduce using rule 30 (Bool_Expr)


State 56

   31 Relation_And_Expr: Relation_Expr . AND Relation_And_Expr
   32                  | Relation_Expr .

    AND  shift, and go to state 84

    $default  reduce using rule 32 (Relation_And_Expr)


State 57

   33 Relation_Expr: Expression . Comp Expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    Comp  go to state 91


State 58

   50 Expression: Multiplicative_Expr .
   51           | Multiplicative_Expr . ADD Expression
   52           | Multiplicative_Expr . SUB Expression

    SUB  shift, and go to state 92
    ADD  shift, and go to state 93

    $default  reduce using rule 50 (Expression)


State 59

   53 Multiplicative_Expr: Term .
   54                    | Term . MULT Multiplicative_Expr
   55                    | Term . DIV Multiplicative_Expr
   56                    | Term . MOD Multiplicative_Expr

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 53 (Multiplicative_Expr)


State 60

   19 statement: WHILE Bool_Expr . BEGIN_LOOP Statements END_LOOP

    BEGIN_LOOP  shift, and go to state 97


State 61

   20 statement: DO BEGIN_LOOP . Statements END_LOOP WHILE Bool_Expr

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    identifier  go to state 41
    Statements  go to state 98
    statement   go to state 43
    Var         go to state 44


State 62

   21 statement: READ Vars .

    $default  reduce using rule 21 (statement)


State 63

   25 Vars: Var .
   26     | Var . COMMA Vars

    COMMA  shift, and go to state 99

    $default  reduce using rule 25 (Vars)


State 64

   22 statement: WRITE Vars .

    $default  reduce using rule 22 (statement)


State 65

   61 Term: L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 100
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 66

   24 statement: RETURN Expression .

    $default  reduce using rule 24 (statement)


State 67

   28 Var: identifier L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 101
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 68

    5 Function: FUNCTION identifier SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 5 (Function)


State 69

   14 Statements: statement SEMICOLON . Statements
   15           | statement SEMICOLON .

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    $default  reduce using rule 15 (Statements)

    identifier  go to state 41
    Statements  go to state 102
    statement   go to state 43
    Var         go to state 44


State 70

   16 statement: Var ASSIGN . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 103
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 71

   10 declaration: Identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (declaration)


State 72

   38 Relation_Expr: NOT TRUE .

    $default  reduce using rule 38 (Relation_Expr)


State 73

   39 Relation_Expr: NOT FALSE .

    $default  reduce using rule 39 (Relation_Expr)


State 74

   40 Relation_Expr: NOT L_PAREN . Bool_Expr R_PAREN
   61 Term: L_PAREN . Expression R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 104
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 80
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 75

   37 Relation_Expr: NOT Expression . Comp Expression

    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86
    LT   shift, and go to state 87
    GT   shift, and go to state 88
    LTE  shift, and go to state 89
    GTE  shift, and go to state 90

    Comp  go to state 105


State 76

   62 Term: SUB L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 106
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 77

   60 Term: SUB NUMBER .

    $default  reduce using rule 60 (Term)


State 78

   58 Term: SUB Var .

    $default  reduce using rule 58 (Term)


State 79

   36 Relation_Expr: L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 107


State 80

   33 Relation_Expr: Expression . Comp Expression
   61 Term: L_PAREN Expression . R_PAREN

    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86
    LT       shift, and go to state 87
    GT       shift, and go to state 88
    LTE      shift, and go to state 89
    GTE      shift, and go to state 90
    R_PAREN  shift, and go to state 108

    Comp  go to state 91


State 81

   63 Term: identifier L_PAREN . Expressions R_PAREN

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    $default  reduce using rule 47 (Expressions)

    identifier           go to state 52
    Var                  go to state 53
    Expressions          go to state 109
    Expression           go to state 110
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 82

   17 statement: IF Bool_Expr THEN . Statements ENDIF
   18          | IF Bool_Expr THEN . Statements ELSE Statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    identifier  go to state 41
    Statements  go to state 111
    statement   go to state 43
    Var         go to state 44


State 83

   29 Bool_Expr: Relation_And_Expr OR . Bool_Expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 112
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 57
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 84

   31 Relation_And_Expr: Relation_Expr AND . Relation_And_Expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Relation_And_Expr    go to state 113
    Relation_Expr        go to state 56
    Expression           go to state 57
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 85

   41 Comp: EQ .

    $default  reduce using rule 41 (Comp)


State 86

   42 Comp: NEQ .

    $default  reduce using rule 42 (Comp)


State 87

   43 Comp: LT .

    $default  reduce using rule 43 (Comp)


State 88

   44 Comp: GT .

    $default  reduce using rule 44 (Comp)


State 89

   46 Comp: LTE .

    $default  reduce using rule 46 (Comp)


State 90

   45 Comp: GTE .

    $default  reduce using rule 45 (Comp)


State 91

   33 Relation_Expr: Expression Comp . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 114
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 92

   52 Expression: Multiplicative_Expr SUB . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 115
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 93

   51 Expression: Multiplicative_Expr ADD . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 116
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 94

   54 Multiplicative_Expr: Term MULT . Multiplicative_Expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Multiplicative_Expr  go to state 117
    Term                 go to state 59


State 95

   55 Multiplicative_Expr: Term DIV . Multiplicative_Expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Multiplicative_Expr  go to state 118
    Term                 go to state 59


State 96

   56 Multiplicative_Expr: Term MOD . Multiplicative_Expr

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Multiplicative_Expr  go to state 119
    Term                 go to state 59


State 97

   19 statement: WHILE Bool_Expr BEGIN_LOOP . Statements END_LOOP

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    identifier  go to state 41
    Statements  go to state 120
    statement   go to state 43
    Var         go to state 44


State 98

   20 statement: DO BEGIN_LOOP Statements . END_LOOP WHILE Bool_Expr

    END_LOOP  shift, and go to state 121


State 99

   26 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 5

    identifier  go to state 41
    Vars        go to state 122
    Var         go to state 63


State 100

   61 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 101

   28 Var: identifier L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 123


State 102

   14 Statements: statement SEMICOLON Statements .

    $default  reduce using rule 14 (Statements)


State 103

   16 statement: Var ASSIGN Expression .

    $default  reduce using rule 16 (statement)


State 104

   40 Relation_Expr: NOT L_PAREN Bool_Expr . R_PAREN

    R_PAREN  shift, and go to state 124


State 105

   37 Relation_Expr: NOT Expression Comp . Expression

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Expression           go to state 125
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 106

   62 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 126


State 107

   36 Relation_Expr: L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 36 (Relation_Expr)


State 108

   61 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 61 (Term)


State 109

   63 Term: identifier L_PAREN Expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 110

   48 Expressions: Expression .
   49            | Expression . COMMA Expressions

    COMMA  shift, and go to state 128

    $default  reduce using rule 48 (Expressions)


State 111

   17 statement: IF Bool_Expr THEN Statements . ENDIF
   18          | IF Bool_Expr THEN Statements . ELSE Statements ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 112

   29 Bool_Expr: Relation_And_Expr OR Bool_Expr .

    $default  reduce using rule 29 (Bool_Expr)


State 113

   31 Relation_And_Expr: Relation_Expr AND Relation_And_Expr .

    $default  reduce using rule 31 (Relation_And_Expr)


State 114

   33 Relation_Expr: Expression Comp Expression .

    $default  reduce using rule 33 (Relation_Expr)


State 115

   52 Expression: Multiplicative_Expr SUB Expression .

    $default  reduce using rule 52 (Expression)


State 116

   51 Expression: Multiplicative_Expr ADD Expression .

    $default  reduce using rule 51 (Expression)


State 117

   54 Multiplicative_Expr: Term MULT Multiplicative_Expr .

    $default  reduce using rule 54 (Multiplicative_Expr)


State 118

   55 Multiplicative_Expr: Term DIV Multiplicative_Expr .

    $default  reduce using rule 55 (Multiplicative_Expr)


State 119

   56 Multiplicative_Expr: Term MOD Multiplicative_Expr .

    $default  reduce using rule 56 (Multiplicative_Expr)


State 120

   19 statement: WHILE Bool_Expr BEGIN_LOOP Statements . END_LOOP

    END_LOOP  shift, and go to state 131


State 121

   20 statement: DO BEGIN_LOOP Statements END_LOOP . WHILE Bool_Expr

    WHILE  shift, and go to state 132


State 122

   26 Vars: Var COMMA Vars .

    $default  reduce using rule 26 (Vars)


State 123

   28 Var: identifier L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 28 (Var)


State 124

   40 Relation_Expr: NOT L_PAREN Bool_Expr R_PAREN .

    $default  reduce using rule 40 (Relation_Expr)


State 125

   37 Relation_Expr: NOT Expression Comp Expression .

    $default  reduce using rule 37 (Relation_Expr)


State 126

   62 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 62 (Term)


State 127

   63 Term: identifier L_PAREN Expressions R_PAREN .

    $default  reduce using rule 63 (Term)


State 128

   49 Expressions: Expression COMMA . Expressions

    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 65
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    $default  reduce using rule 47 (Expressions)

    identifier           go to state 52
    Var                  go to state 53
    Expressions          go to state 133
    Expression           go to state 110
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 129

   17 statement: IF Bool_Expr THEN Statements ENDIF .

    $default  reduce using rule 17 (statement)


State 130

   18 statement: IF Bool_Expr THEN Statements ELSE . Statements ENDIF

    IF        shift, and go to state 34
    WHILE     shift, and go to state 35
    DO        shift, and go to state 36
    CONTINUE  shift, and go to state 37
    READ      shift, and go to state 38
    WRITE     shift, and go to state 39
    RETURN    shift, and go to state 40
    IDENT     shift, and go to state 5

    identifier  go to state 41
    Statements  go to state 134
    statement   go to state 43
    Var         go to state 44


State 131

   19 statement: WHILE Bool_Expr BEGIN_LOOP Statements END_LOOP .

    $default  reduce using rule 19 (statement)


State 132

   20 statement: DO BEGIN_LOOP Statements END_LOOP WHILE . Bool_Expr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    L_PAREN  shift, and go to state 50
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 51

    identifier           go to state 52
    Var                  go to state 53
    Bool_Expr            go to state 135
    Relation_And_Expr    go to state 55
    Relation_Expr        go to state 56
    Expression           go to state 57
    Multiplicative_Expr  go to state 58
    Term                 go to state 59


State 133

   49 Expressions: Expression COMMA Expressions .

    $default  reduce using rule 49 (Expressions)


State 134

   18 statement: IF Bool_Expr THEN Statements ELSE Statements . ENDIF

    ENDIF  shift, and go to state 136


State 135

   20 statement: DO BEGIN_LOOP Statements END_LOOP WHILE Bool_Expr .

    $default  reduce using rule 20 (statement)


State 136

   18 statement: IF Bool_Expr THEN Statements ELSE Statements ENDIF .

    $default  reduce using rule 18 (statement)
