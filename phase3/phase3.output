Nonterminals useless in grammar

   vars


Terminals unused in grammar

   MAIN


Rules useless in grammar

   70 vars: var
   71     | var COMMA vars


Rules useless in parser due to conflicts

   21 $@7: %empty


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 4 conflicts: 1 shift/reduce
State 59 conflicts: 1 reduce/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions
    2           | functions prog_start

    3 functions: %empty
    4          | function functions

    5 $@1: %empty

    6 $@2: %empty

    7 $@3: %empty

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    9 ident: IDENT

   10 declarations: %empty
   11             | declaration SEMICOLON declarations

   12 declaration: identifiers COLON INTEGER
   13            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   14 identifiers: ident
   15            | ident COMMA identifiers

   16 statement: var ASSIGN expression

   17 $@4: %empty

   18 $@5: %empty

   19 $@6: %empty

   20 statement: IF bool_exp $@4 THEN statements $@5 ELSE $@6 statements ENDIF

   21 $@7: %empty

   22 statement: IF bool_exp $@7 THEN statements ENDIF

   23 $@8: %empty

   24 $@9: %empty

   25 $@10: %empty

   26 statement: WHILE $@8 relation_exp $@9 BEGINLOOP statements $@10 ENDLOOP
   27          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   28          | READ IDENT
   29          | WRITE IDENT
   30          | CONTINUE
   31          | RETURN expression

   32 statements: statement SEMICOLON
   33           | statement SEMICOLON statements

   34 expression: multiplicative_expression
   35           | multiplicative_expression ADD expression
   36           | multiplicative_expression SUB expression

   37 multiplicative_expression: term
   38                          | term MULT multiplicative_expression
   39                          | term DIV multiplicative_expression
   40                          | term MOD multiplicative_expression

   41 term: var
   42     | NUMBER
   43     | L_PAREN expression R_PAREN

   44 $@11: %empty

   45 term: ident $@11 L_PAREN expressions R_PAREN

   46 expressions: %empty
   47            | comma_sep_expressions

   48 comma_sep_expressions: expression
   49                      | expression COMMA comma_sep_expressions

   50 bool_exp: relation_and_exp
   51         | relation_and_exp OR bool_exp

   52 relation_and_exp: relation_exp
   53                 | relation_exp AND relation_and_exp

   54 relation_exp: expression comp expression
   55             | NOT expression comp expression
   56             | TRUE
   57             | NOT TRUE
   58             | FALSE
   59             | NOT FALSE
   60             | L_PAREN bool_exp R_PAREN
   61             | NOT L_PAREN bool_exp R_PAREN

   62 comp: EQ
   63     | NEQ
   64     | LT
   65     | GT
   66     | LTE
   67     | GTE

   68 var: ident
   69    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_PARAMS (258) 8
END_PARAMS (259) 8
BEGIN_LOCALS (260) 8
END_LOCALS (261) 8
BEGIN_BODY (262) 8
END_BODY (263) 8
FUNCTION (264) 8
RETURN (265) 31
MAIN (266)
L_SQUARE_BRACKET (267) 13 69
R_SQUARE_BRACKET (268) 13 69
INTEGER (269) 12 13
ARRAY (270) 13
OF (271) 13
IF (272) 20 22
THEN (273) 20 22
ENDIF (274) 20 22
ELSE (275) 20
WHILE (276) 26 27
DO (277) 27
BEGINLOOP (278) 26 27
ENDLOOP (279) 26 27
CONTINUE (280) 30
READ (281) 28
WRITE (282) 29
TRUE (283) 56 57
FALSE (284) 58 59
AND (285) 53
OR (286) 51
NOT (287) 55 57 59 61
ASSIGN (288) 16
SUB (289) 36
ADD (290) 35
MULT (291) 38
DIV (292) 39
MOD (293) 40
EQ (294) 62
NEQ (295) 63
LT (296) 64
GT (297) 65
LTE (298) 66
GTE (299) 67
SEMICOLON (300) 8 11 32 33
COLON (301) 12 13
COMMA (302) 15 49
L_PAREN (303) 43 45 60 61
R_PAREN (304) 43 45 60 61
NUMBER (305) 13 42
IDENT (306) 9 28 29


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1 2, on right: 0 2
functions (54)
    on left: 3 4, on right: 1 2 4
function (55)
    on left: 8, on right: 4
$@1 (56)
    on left: 5, on right: 8
$@2 (57)
    on left: 6, on right: 8
$@3 (58)
    on left: 7, on right: 8
ident (59)
    on left: 9, on right: 8 14 15 45 68 69
declarations (60)
    on left: 10 11, on right: 8 11
declaration (61)
    on left: 12 13, on right: 11
identifiers (62)
    on left: 14 15, on right: 12 13 15
statement (63)
    on left: 16 20 22 26 27 28 29 30 31, on right: 32 33
$@4 (64)
    on left: 17, on right: 20
$@5 (65)
    on left: 18, on right: 20
$@6 (66)
    on left: 19, on right: 20
$@7 (67)
    on left: 21, on right: 22
$@8 (68)
    on left: 23, on right: 26
$@9 (69)
    on left: 24, on right: 26
$@10 (70)
    on left: 25, on right: 26
statements (71)
    on left: 32 33, on right: 8 20 22 26 27 33
expression (72)
    on left: 34 35 36, on right: 16 31 35 36 43 48 49 54 55 69
multiplicative_expression (73)
    on left: 37 38 39 40, on right: 34 35 36 38 39 40
term (74)
    on left: 41 42 43 45, on right: 37 38 39 40
$@11 (75)
    on left: 44, on right: 45
expressions (76)
    on left: 46 47, on right: 45
comma_sep_expressions (77)
    on left: 48 49, on right: 47 49
bool_exp (78)
    on left: 50 51, on right: 20 22 27 51 60 61
relation_and_exp (79)
    on left: 52 53, on right: 50 51 53
relation_exp (80)
    on left: 54 55 56 57 58 59 60 61, on right: 26 52 53
comp (81)
    on left: 62 63 64 65 66 67, on right: 54 55
var (82)
    on left: 68 69, on right: 16 41


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    8 function: FUNCTION . ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .
    2           | functions . prog_start

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 8
    functions   go to state 3
    function    go to state 4


State 4

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 4


State 5

    9 ident: IDENT .

    $default  reduce using rule 9 (ident)


State 6

    8 function: FUNCTION ident . SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 prog_start: functions prog_start .

    $default  reduce using rule 2 (prog_start)


State 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 10

    8 function: FUNCTION ident SEMICOLON . $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 ($@1)

    $@1  go to state 11


State 11

    8 function: FUNCTION ident SEMICOLON $@1 . BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 12


State 12

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS . declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 14
    declaration   go to state 15
    identifiers   go to state 16


State 13

   14 identifiers: ident .
   15            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 14 (identifiers)


State 14

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations . END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 15

   11 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 16

   12 declaration: identifiers . COLON INTEGER
   13            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

   15 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    ident        go to state 13
    identifiers  go to state 21


State 18

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS . $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    $default  reduce using rule 6 ($@2)

    $@2  go to state 22


State 19

   11 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 23
    declaration   go to state 15
    identifiers   go to state 16


State 20

   12 declaration: identifiers COLON . INTEGER
   13            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   15 identifiers: ident COMMA identifiers .

    $default  reduce using rule 15 (identifiers)


State 22

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 . BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 26


State 23

   11 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 11 (declarations)


State 24

   12 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 12 (declaration)


State 25

   13 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 26

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS . declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 10 (declarations)

    ident         go to state 13
    declarations  go to state 28
    declaration   go to state 15
    identifiers   go to state 16


State 27

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations . END_LOCALS $@3 BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 29

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS . $@3 BEGIN_BODY statements END_BODY

    $default  reduce using rule 7 ($@3)

    $@3  go to state 32


State 31

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 33


State 32

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 34


State 33

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 35


State 34

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY . statements END_BODY

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 45
    var         go to state 46


State 35

   13 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 13 (declaration)


State 36

   31 statement: RETURN . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 50
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 37

   20 statement: IF . bool_exp $@4 THEN statements $@5 ELSE $@6 statements ENDIF
   22          | IF . bool_exp $@7 THEN statements ENDIF

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 59
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 38

   26 statement: WHILE . $@8 relation_exp $@9 BEGINLOOP statements $@10 ENDLOOP

    $default  reduce using rule 23 ($@8)

    $@8  go to state 62


State 39

   27 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 63


State 40

   30 statement: CONTINUE .

    $default  reduce using rule 30 (statement)


State 41

   28 statement: READ . IDENT

    IDENT  shift, and go to state 64


State 42

   29 statement: WRITE . IDENT

    IDENT  shift, and go to state 65


State 43

   68 var: ident .
   69    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    $default  reduce using rule 68 (var)


State 44

   32 statements: statement . SEMICOLON
   33           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 67


State 45

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 68


State 46

   16 statement: var . ASSIGN expression

    ASSIGN  shift, and go to state 69


State 47

   43 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 70
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 48

   42 term: NUMBER .

    $default  reduce using rule 42 (term)


State 49

   45 term: ident . $@11 L_PAREN expressions R_PAREN
   68 var: ident .
   69    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 66

    L_PAREN   reduce using rule 44 ($@11)
    $default  reduce using rule 68 (var)

    $@11  go to state 71


State 50

   31 statement: RETURN expression .

    $default  reduce using rule 31 (statement)


State 51

   34 expression: multiplicative_expression .
   35           | multiplicative_expression . ADD expression
   36           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 72
    ADD  shift, and go to state 73

    $default  reduce using rule 34 (expression)


State 52

   37 multiplicative_expression: term .
   38                          | term . MULT multiplicative_expression
   39                          | term . DIV multiplicative_expression
   40                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76

    $default  reduce using rule 37 (multiplicative_expression)


State 53

   41 term: var .

    $default  reduce using rule 41 (term)


State 54

   56 relation_exp: TRUE .

    $default  reduce using rule 56 (relation_exp)


State 55

   58 relation_exp: FALSE .

    $default  reduce using rule 58 (relation_exp)


State 56

   55 relation_exp: NOT . expression comp expression
   57             | NOT . TRUE
   59             | NOT . FALSE
   61             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    L_PAREN  shift, and go to state 79
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 80
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 57

   43 term: L_PAREN . expression R_PAREN
   60 relation_exp: L_PAREN . bool_exp R_PAREN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 81
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 82
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 58

   54 relation_exp: expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 59

   20 statement: IF bool_exp . $@4 THEN statements $@5 ELSE $@6 statements ENDIF
   22          | IF bool_exp . $@7 THEN statements ENDIF

    THEN      reduce using rule 17 ($@4)
    THEN      [reduce using rule 21 ($@7)]
    $default  reduce using rule 17 ($@4)

    $@4  go to state 90
    $@7  go to state 91


State 60

   50 bool_exp: relation_and_exp .
   51         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 92

    $default  reduce using rule 50 (bool_exp)


State 61

   52 relation_and_exp: relation_exp .
   53                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 93

    $default  reduce using rule 52 (relation_and_exp)


State 62

   26 statement: WHILE $@8 . relation_exp $@9 BEGINLOOP statements $@10 ENDLOOP

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    relation_exp               go to state 94
    var                        go to state 53


State 63

   27 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 95
    var         go to state 46


State 64

   28 statement: READ IDENT .

    $default  reduce using rule 28 (statement)


State 65

   29 statement: WRITE IDENT .

    $default  reduce using rule 29 (statement)


State 66

   69 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 96
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 67

   32 statements: statement SEMICOLON .
   33           | statement SEMICOLON . statements

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    $default  reduce using rule 32 (statements)

    ident       go to state 43
    statement   go to state 44
    statements  go to state 97
    var         go to state 46


State 68

    8 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS $@2 BEGIN_LOCALS declarations END_LOCALS $@3 BEGIN_BODY statements END_BODY .

    $default  reduce using rule 8 (function)


State 69

   16 statement: var ASSIGN . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 98
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 70

   43 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99


State 71

   45 term: ident $@11 . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 100


State 72

   36 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 101
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 73

   35 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 102
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 74

   38 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    multiplicative_expression  go to state 103
    term                       go to state 52
    var                        go to state 53


State 75

   39 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    multiplicative_expression  go to state 104
    term                       go to state 52
    var                        go to state 53


State 76

   40 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    multiplicative_expression  go to state 105
    term                       go to state 52
    var                        go to state 53


State 77

   57 relation_exp: NOT TRUE .

    $default  reduce using rule 57 (relation_exp)


State 78

   59 relation_exp: NOT FALSE .

    $default  reduce using rule 59 (relation_exp)


State 79

   43 term: L_PAREN . expression R_PAREN
   61 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 81
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 106
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 80

   55 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 107


State 81

   43 term: L_PAREN expression . R_PAREN
   54 relation_exp: expression . comp expression

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 99

    comp  go to state 89


State 82

   60 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 108


State 83

   62 comp: EQ .

    $default  reduce using rule 62 (comp)


State 84

   63 comp: NEQ .

    $default  reduce using rule 63 (comp)


State 85

   64 comp: LT .

    $default  reduce using rule 64 (comp)


State 86

   65 comp: GT .

    $default  reduce using rule 65 (comp)


State 87

   66 comp: LTE .

    $default  reduce using rule 66 (comp)


State 88

   67 comp: GTE .

    $default  reduce using rule 67 (comp)


State 89

   54 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 109
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 90

   20 statement: IF bool_exp $@4 . THEN statements $@5 ELSE $@6 statements ENDIF

    THEN  shift, and go to state 110


State 91

   22 statement: IF bool_exp $@7 . THEN statements ENDIF

    THEN  shift, and go to state 111


State 92

   51 bool_exp: relation_and_exp OR . bool_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 112
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 93

   53 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    relation_and_exp           go to state 113
    relation_exp               go to state 61
    var                        go to state 53


State 94

   26 statement: WHILE $@8 relation_exp . $@9 BEGINLOOP statements $@10 ENDLOOP

    $default  reduce using rule 24 ($@9)

    $@9  go to state 114


State 95

   27 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 115


State 96

   69 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 116


State 97

   33 statements: statement SEMICOLON statements .

    $default  reduce using rule 33 (statements)


State 98

   16 statement: var ASSIGN expression .

    $default  reduce using rule 16 (statement)


State 99

   43 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 43 (term)


State 100

   45 term: ident $@11 L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    $default  reduce using rule 46 (expressions)

    ident                      go to state 49
    expression                 go to state 117
    multiplicative_expression  go to state 51
    term                       go to state 52
    expressions                go to state 118
    comma_sep_expressions      go to state 119
    var                        go to state 53


State 101

   36 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 36 (expression)


State 102

   35 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 35 (expression)


State 103

   38 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 38 (multiplicative_expression)


State 104

   39 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 39 (multiplicative_expression)


State 105

   40 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 40 (multiplicative_expression)


State 106

   61 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 120


State 107

   55 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 121
    multiplicative_expression  go to state 51
    term                       go to state 52
    var                        go to state 53


State 108

   60 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 60 (relation_exp)


State 109

   54 relation_exp: expression comp expression .

    $default  reduce using rule 54 (relation_exp)


State 110

   20 statement: IF bool_exp $@4 THEN . statements $@5 ELSE $@6 statements ENDIF

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 122
    var         go to state 46


State 111

   22 statement: IF bool_exp $@7 THEN . statements ENDIF

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 123
    var         go to state 46


State 112

   51 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 51 (bool_exp)


State 113

   53 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 53 (relation_and_exp)


State 114

   26 statement: WHILE $@8 relation_exp $@9 . BEGINLOOP statements $@10 ENDLOOP

    BEGINLOOP  shift, and go to state 124


State 115

   27 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 125


State 116

   69 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 69 (var)


State 117

   48 comma_sep_expressions: expression .
   49                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 126

    $default  reduce using rule 48 (comma_sep_expressions)


State 118

   45 term: ident $@11 L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 127


State 119

   47 expressions: comma_sep_expressions .

    $default  reduce using rule 47 (expressions)


State 120

   61 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 61 (relation_exp)


State 121

   55 relation_exp: NOT expression comp expression .

    $default  reduce using rule 55 (relation_exp)


State 122

   20 statement: IF bool_exp $@4 THEN statements . $@5 ELSE $@6 statements ENDIF

    $default  reduce using rule 18 ($@5)

    $@5  go to state 128


State 123

   22 statement: IF bool_exp $@7 THEN statements . ENDIF

    ENDIF  shift, and go to state 129


State 124

   26 statement: WHILE $@8 relation_exp $@9 BEGINLOOP . statements $@10 ENDLOOP

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 130
    var         go to state 46


State 125

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 54
    FALSE    shift, and go to state 55
    NOT      shift, and go to state 56
    L_PAREN  shift, and go to state 57
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 58
    multiplicative_expression  go to state 51
    term                       go to state 52
    bool_exp                   go to state 131
    relation_and_exp           go to state 60
    relation_exp               go to state 61
    var                        go to state 53


State 126

   49 comma_sep_expressions: expression COMMA . comma_sep_expressions

    L_PAREN  shift, and go to state 47
    NUMBER   shift, and go to state 48
    IDENT    shift, and go to state 5

    ident                      go to state 49
    expression                 go to state 117
    multiplicative_expression  go to state 51
    term                       go to state 52
    comma_sep_expressions      go to state 132
    var                        go to state 53


State 127

   45 term: ident $@11 L_PAREN expressions R_PAREN .

    $default  reduce using rule 45 (term)


State 128

   20 statement: IF bool_exp $@4 THEN statements $@5 . ELSE $@6 statements ENDIF

    ELSE  shift, and go to state 133


State 129

   22 statement: IF bool_exp $@7 THEN statements ENDIF .

    $default  reduce using rule 22 (statement)


State 130

   26 statement: WHILE $@8 relation_exp $@9 BEGINLOOP statements . $@10 ENDLOOP

    $default  reduce using rule 25 ($@10)

    $@10  go to state 134


State 131

   27 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 27 (statement)


State 132

   49 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 49 (comma_sep_expressions)


State 133

   20 statement: IF bool_exp $@4 THEN statements $@5 ELSE . $@6 statements ENDIF

    $default  reduce using rule 19 ($@6)

    $@6  go to state 135


State 134

   26 statement: WHILE $@8 relation_exp $@9 BEGINLOOP statements $@10 . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 135

   20 statement: IF bool_exp $@4 THEN statements $@5 ELSE $@6 . statements ENDIF

    RETURN    shift, and go to state 36
    IF        shift, and go to state 37
    WHILE     shift, and go to state 38
    DO        shift, and go to state 39
    CONTINUE  shift, and go to state 40
    READ      shift, and go to state 41
    WRITE     shift, and go to state 42
    IDENT     shift, and go to state 5

    ident       go to state 43
    statement   go to state 44
    statements  go to state 137
    var         go to state 46


State 136

   26 statement: WHILE $@8 relation_exp $@9 BEGINLOOP statements $@10 ENDLOOP .

    $default  reduce using rule 26 (statement)


State 137

   20 statement: IF bool_exp $@4 THEN statements $@5 ELSE $@6 statements . ENDIF

    ENDIF  shift, and go to state 138


State 138

   20 statement: IF bool_exp $@4 THEN statements $@5 ELSE $@6 statements ENDIF .

    $default  reduce using rule 20 (statement)
