Terminals unused in grammar

   MAIN


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 1 shift/reduce, 1 reduce/reduce
State 4 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog_start $end

    1 prog_start: functions
    2           | functions prog_start

    3 functions: %empty
    4          | function functions

    5 $@1: %empty

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 ident: IDENT

    8 declarations: %empty
    9             | declaration SEMICOLON declarations

   10 declaration: identifiers COLON INTEGER
   11            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   12 identifiers: ident
   13            | ident COMMA identifiers

   14 statement: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression
   15          | ident ASSIGN expression
   16          | IF bool_exp THEN statements ENDIF
   17          | IF bool_exp THEN statements ELSE statements ENDIF
   18          | WHILE bool_exp BEGINLOOP statements ENDLOOP
   19          | DO BEGINLOOP statements ENDLOOP WHILE bool_exp
   20          | READ vars
   21          | WRITE vars
   22          | CONTINUE
   23          | RETURN expression

   24 statements: statement SEMICOLON
   25           | statement SEMICOLON statements

   26 expression: multiplicative_expression
   27           | multiplicative_expression ADD expression
   28           | multiplicative_expression SUB expression

   29 multiplicative_expression: term
   30                          | term MULT multiplicative_expression
   31                          | term DIV multiplicative_expression
   32                          | term MOD multiplicative_expression

   33 term: var
   34     | NUMBER
   35     | L_PAREN expression R_PAREN

   36 $@2: %empty

   37 term: ident $@2 L_PAREN expressions R_PAREN

   38 expressions: %empty
   39            | comma_sep_expressions

   40 comma_sep_expressions: expression
   41                      | expression COMMA comma_sep_expressions

   42 bool_exp: relation_and_exp
   43         | relation_and_exp OR bool_exp

   44 relation_and_exp: relation_exp
   45                 | relation_exp AND relation_and_exp

   46 relation_exp: expression comp expression
   47             | NOT expression comp expression
   48             | TRUE
   49             | NOT TRUE
   50             | FALSE
   51             | NOT FALSE
   52             | L_PAREN bool_exp R_PAREN
   53             | NOT L_PAREN bool_exp R_PAREN

   54 comp: EQ
   55     | NEQ
   56     | LT
   57     | GT
   58     | LTE
   59     | GTE

   60 var: ident
   61    | ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET

   62 vars: var
   63     | var COMMA vars


Terminals, with rules where they appear

$end (0) 0
error (256)
BEGIN_PARAMS (258) 6
END_PARAMS (259) 6
BEGIN_LOCALS (260) 6
END_LOCALS (261) 6
BEGIN_BODY (262) 6
END_BODY (263) 6
FUNCTION (264) 6
RETURN (265) 23
MAIN (266)
L_SQUARE_BRACKET (267) 11 14 61
R_SQUARE_BRACKET (268) 11 14 61
INTEGER (269) 10 11
ARRAY (270) 11
OF (271) 11
IF (272) 16 17
THEN (273) 16 17
ENDIF (274) 16 17
ELSE (275) 17
WHILE (276) 18 19
DO (277) 19
BEGINLOOP (278) 18 19
ENDLOOP (279) 18 19
CONTINUE (280) 22
READ (281) 20
WRITE (282) 21
TRUE (283) 48 49
FALSE (284) 50 51
AND (285) 45
OR (286) 43
NOT (287) 47 49 51 53
ASSIGN (288) 14 15
SUB (289) 28
ADD (290) 27
MULT (291) 30
DIV (292) 31
MOD (293) 32
EQ (294) 54
NEQ (295) 55
LT (296) 56
GT (297) 57
LTE (298) 58
GTE (299) 59
SEMICOLON (300) 6 9 24 25
COLON (301) 10 11
COMMA (302) 13 41 63
L_PAREN (303) 35 37 52 53
R_PAREN (304) 35 37 52 53
NUMBER (305) 11 34
IDENT (306) 7


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
prog_start (53)
    on left: 1 2, on right: 0 2
functions (54)
    on left: 3 4, on right: 1 2 4
function (55)
    on left: 6, on right: 4
$@1 (56)
    on left: 5, on right: 6
ident (57)
    on left: 7, on right: 6 12 13 14 15 37 60 61
declarations (58)
    on left: 8 9, on right: 6 9
declaration (59)
    on left: 10 11, on right: 9
identifiers (60)
    on left: 12 13, on right: 10 11 13
statement (61)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 24 25
statements (62)
    on left: 24 25, on right: 6 16 17 18 19 25
expression (63)
    on left: 26 27 28, on right: 14 15 23 27 28 35 40 41 46 47 61
multiplicative_expression (64)
    on left: 29 30 31 32, on right: 26 27 28 30 31 32
term (65)
    on left: 33 34 35 37, on right: 29 30 31 32
$@2 (66)
    on left: 36, on right: 37
expressions (67)
    on left: 38 39, on right: 37
comma_sep_expressions (68)
    on left: 40 41, on right: 39 41
bool_exp (69)
    on left: 42 43, on right: 16 17 18 19 43 52 53
relation_and_exp (70)
    on left: 44 45, on right: 42 43 45
relation_exp (71)
    on left: 46 47 48 49 50 51 52 53, on right: 44 45
comp (72)
    on left: 54 55 56 57 58 59, on right: 46 47
var (73)
    on left: 60 61, on right: 33 62 63
vars (74)
    on left: 62 63, on right: 20 21 63


State 0

    0 $accept: . prog_start $end

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    prog_start  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    6 function: FUNCTION . ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    ident  go to state 6


State 2

    0 $accept: prog_start . $end

    $end  shift, and go to state 7


State 3

    1 prog_start: functions .
    2           | functions . prog_start

    FUNCTION  shift, and go to state 1

    $end      reduce using rule 1 (prog_start)
    $end      [reduce using rule 3 (functions)]
    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 1 (prog_start)

    prog_start  go to state 8
    functions   go to state 3
    function    go to state 4


State 4

    4 functions: function . functions

    FUNCTION  shift, and go to state 1

    FUNCTION  [reduce using rule 3 (functions)]
    $default  reduce using rule 3 (functions)

    functions  go to state 9
    function   go to state 4


State 5

    7 ident: IDENT .

    $default  reduce using rule 7 (ident)


State 6

    6 function: FUNCTION ident . SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: prog_start $end .

    $default  accept


State 8

    2 prog_start: functions prog_start .

    $default  reduce using rule 2 (prog_start)


State 9

    4 functions: function functions .

    $default  reduce using rule 4 (functions)


State 10

    6 function: FUNCTION ident SEMICOLON . $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    $default  reduce using rule 5 ($@1)

    $@1  go to state 11


State 11

    6 function: FUNCTION ident SEMICOLON $@1 . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 12


State 12

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 14
    declaration   go to state 15
    identifiers   go to state 16


State 13

   12 identifiers: ident .
   13            | ident . COMMA identifiers

    COMMA  shift, and go to state 17

    $default  reduce using rule 12 (identifiers)


State 14

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 18


State 15

    9 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 19


State 16

   10 declaration: identifiers . COLON INTEGER
   11            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 20


State 17

   13 identifiers: ident COMMA . identifiers

    IDENT  shift, and go to state 5

    ident        go to state 13
    identifiers  go to state 21


State 18

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 19

    9 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 23
    declaration   go to state 15
    identifiers   go to state 16


State 20

   10 declaration: identifiers COLON . INTEGER
   11            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25


State 21

   13 identifiers: ident COMMA identifiers .

    $default  reduce using rule 13 (identifiers)


State 22

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 8 (declarations)

    ident         go to state 13
    declarations  go to state 26
    declaration   go to state 15
    identifiers   go to state 16


State 23

    9 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 9 (declarations)


State 24

   10 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 10 (declaration)


State 25

   11 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 27


State 26

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 28


State 27

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 29


State 28

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 30


State 29

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 31


State 30

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    ident       go to state 39
    statement   go to state 40
    statements  go to state 41


State 31

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 42


State 32

   23 statement: RETURN . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 46
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 33

   16 statement: IF . bool_exp THEN statements ENDIF
   17          | IF . bool_exp THEN statements ELSE statements ENDIF

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 54
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 55
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 34

   18 statement: WHILE . bool_exp BEGINLOOP statements ENDLOOP

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 54
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 58
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 35

   19 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool_exp

    BEGINLOOP  shift, and go to state 59


State 36

   22 statement: CONTINUE .

    $default  reduce using rule 22 (statement)


State 37

   20 statement: READ . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    var    go to state 61
    vars   go to state 62


State 38

   21 statement: WRITE . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    var    go to state 61
    vars   go to state 63


State 39

   14 statement: ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression
   15          | ident . ASSIGN expression

    L_SQUARE_BRACKET  shift, and go to state 64
    ASSIGN            shift, and go to state 65


State 40

   24 statements: statement . SEMICOLON
   25           | statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 66


State 41

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 67


State 42

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 68


State 43

   35 term: L_PAREN . expression R_PAREN

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 69
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 44

   34 term: NUMBER .

    $default  reduce using rule 34 (term)


State 45

   37 term: ident . $@2 L_PAREN expressions R_PAREN
   60 var: ident .
   61    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    L_PAREN   reduce using rule 36 ($@2)
    $default  reduce using rule 60 (var)

    $@2  go to state 71


State 46

   23 statement: RETURN expression .

    $default  reduce using rule 23 (statement)


State 47

   26 expression: multiplicative_expression .
   27           | multiplicative_expression . ADD expression
   28           | multiplicative_expression . SUB expression

    SUB  shift, and go to state 72
    ADD  shift, and go to state 73

    $default  reduce using rule 26 (expression)


State 48

   29 multiplicative_expression: term .
   30                          | term . MULT multiplicative_expression
   31                          | term . DIV multiplicative_expression
   32                          | term . MOD multiplicative_expression

    MULT  shift, and go to state 74
    DIV   shift, and go to state 75
    MOD   shift, and go to state 76

    $default  reduce using rule 29 (multiplicative_expression)


State 49

   33 term: var .

    $default  reduce using rule 33 (term)


State 50

   48 relation_exp: TRUE .

    $default  reduce using rule 48 (relation_exp)


State 51

   50 relation_exp: FALSE .

    $default  reduce using rule 50 (relation_exp)


State 52

   47 relation_exp: NOT . expression comp expression
   49             | NOT . TRUE
   51             | NOT . FALSE
   53             | NOT . L_PAREN bool_exp R_PAREN

    TRUE     shift, and go to state 77
    FALSE    shift, and go to state 78
    L_PAREN  shift, and go to state 79
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 80
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 53

   35 term: L_PAREN . expression R_PAREN
   52 relation_exp: L_PAREN . bool_exp R_PAREN

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 81
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 82
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 54

   46 relation_exp: expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 89


State 55

   16 statement: IF bool_exp . THEN statements ENDIF
   17          | IF bool_exp . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 90


State 56

   42 bool_exp: relation_and_exp .
   43         | relation_and_exp . OR bool_exp

    OR  shift, and go to state 91

    $default  reduce using rule 42 (bool_exp)


State 57

   44 relation_and_exp: relation_exp .
   45                 | relation_exp . AND relation_and_exp

    AND  shift, and go to state 92

    $default  reduce using rule 44 (relation_and_exp)


State 58

   18 statement: WHILE bool_exp . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 59

   19 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool_exp

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    ident       go to state 39
    statement   go to state 40
    statements  go to state 94


State 60

   60 var: ident .
   61    | ident . L_SQUARE_BRACKET expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 60 (var)


State 61

   62 vars: var .
   63     | var . COMMA vars

    COMMA  shift, and go to state 95

    $default  reduce using rule 62 (vars)


State 62

   20 statement: READ vars .

    $default  reduce using rule 20 (statement)


State 63

   21 statement: WRITE vars .

    $default  reduce using rule 21 (statement)


State 64

   14 statement: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET ASSIGN expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 96
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 65

   15 statement: ident ASSIGN . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 97
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 66

   24 statements: statement SEMICOLON .
   25           | statement SEMICOLON . statements

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    $default  reduce using rule 24 (statements)

    ident       go to state 39
    statement   go to state 40
    statements  go to state 98


State 67

    6 function: FUNCTION ident SEMICOLON $@1 BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 68

   11 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 11 (declaration)


State 69

   35 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 99


State 70

   61 var: ident L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 100
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 71

   37 term: ident $@2 . L_PAREN expressions R_PAREN

    L_PAREN  shift, and go to state 101


State 72

   28 expression: multiplicative_expression SUB . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 102
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 73

   27 expression: multiplicative_expression ADD . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 103
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 74

   30 multiplicative_expression: term MULT . multiplicative_expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    multiplicative_expression  go to state 104
    term                       go to state 48
    var                        go to state 49


State 75

   31 multiplicative_expression: term DIV . multiplicative_expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    multiplicative_expression  go to state 105
    term                       go to state 48
    var                        go to state 49


State 76

   32 multiplicative_expression: term MOD . multiplicative_expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    multiplicative_expression  go to state 106
    term                       go to state 48
    var                        go to state 49


State 77

   49 relation_exp: NOT TRUE .

    $default  reduce using rule 49 (relation_exp)


State 78

   51 relation_exp: NOT FALSE .

    $default  reduce using rule 51 (relation_exp)


State 79

   35 term: L_PAREN . expression R_PAREN
   53 relation_exp: NOT L_PAREN . bool_exp R_PAREN

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 81
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 107
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 80

   47 relation_exp: NOT expression . comp expression

    EQ   shift, and go to state 83
    NEQ  shift, and go to state 84
    LT   shift, and go to state 85
    GT   shift, and go to state 86
    LTE  shift, and go to state 87
    GTE  shift, and go to state 88

    comp  go to state 108


State 81

   35 term: L_PAREN expression . R_PAREN
   46 relation_exp: expression . comp expression

    EQ       shift, and go to state 83
    NEQ      shift, and go to state 84
    LT       shift, and go to state 85
    GT       shift, and go to state 86
    LTE      shift, and go to state 87
    GTE      shift, and go to state 88
    R_PAREN  shift, and go to state 99

    comp  go to state 89


State 82

   52 relation_exp: L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 109


State 83

   54 comp: EQ .

    $default  reduce using rule 54 (comp)


State 84

   55 comp: NEQ .

    $default  reduce using rule 55 (comp)


State 85

   56 comp: LT .

    $default  reduce using rule 56 (comp)


State 86

   57 comp: GT .

    $default  reduce using rule 57 (comp)


State 87

   58 comp: LTE .

    $default  reduce using rule 58 (comp)


State 88

   59 comp: GTE .

    $default  reduce using rule 59 (comp)


State 89

   46 relation_exp: expression comp . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 110
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 90

   16 statement: IF bool_exp THEN . statements ENDIF
   17          | IF bool_exp THEN . statements ELSE statements ENDIF

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    ident       go to state 39
    statement   go to state 40
    statements  go to state 111


State 91

   43 bool_exp: relation_and_exp OR . bool_exp

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 54
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 112
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 92

   45 relation_and_exp: relation_exp AND . relation_and_exp

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 54
    multiplicative_expression  go to state 47
    term                       go to state 48
    relation_and_exp           go to state 113
    relation_exp               go to state 57
    var                        go to state 49


State 93

   18 statement: WHILE bool_exp BEGINLOOP . statements ENDLOOP

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    ident       go to state 39
    statement   go to state 40
    statements  go to state 114


State 94

   19 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool_exp

    ENDLOOP  shift, and go to state 115


State 95

   63 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    ident  go to state 60
    var    go to state 61
    vars   go to state 116


State 96

   14 statement: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET ASSIGN expression

    R_SQUARE_BRACKET  shift, and go to state 117


State 97

   15 statement: ident ASSIGN expression .

    $default  reduce using rule 15 (statement)


State 98

   25 statements: statement SEMICOLON statements .

    $default  reduce using rule 25 (statements)


State 99

   35 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 35 (term)


State 100

   61 var: ident L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 118


State 101

   37 term: ident $@2 L_PAREN . expressions R_PAREN

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    $default  reduce using rule 38 (expressions)

    ident                      go to state 45
    expression                 go to state 119
    multiplicative_expression  go to state 47
    term                       go to state 48
    expressions                go to state 120
    comma_sep_expressions      go to state 121
    var                        go to state 49


State 102

   28 expression: multiplicative_expression SUB expression .

    $default  reduce using rule 28 (expression)


State 103

   27 expression: multiplicative_expression ADD expression .

    $default  reduce using rule 27 (expression)


State 104

   30 multiplicative_expression: term MULT multiplicative_expression .

    $default  reduce using rule 30 (multiplicative_expression)


State 105

   31 multiplicative_expression: term DIV multiplicative_expression .

    $default  reduce using rule 31 (multiplicative_expression)


State 106

   32 multiplicative_expression: term MOD multiplicative_expression .

    $default  reduce using rule 32 (multiplicative_expression)


State 107

   53 relation_exp: NOT L_PAREN bool_exp . R_PAREN

    R_PAREN  shift, and go to state 122


State 108

   47 relation_exp: NOT expression comp . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 123
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 109

   52 relation_exp: L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 52 (relation_exp)


State 110

   46 relation_exp: expression comp expression .

    $default  reduce using rule 46 (relation_exp)


State 111

   16 statement: IF bool_exp THEN statements . ENDIF
   17          | IF bool_exp THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 124
    ELSE   shift, and go to state 125


State 112

   43 bool_exp: relation_and_exp OR bool_exp .

    $default  reduce using rule 43 (bool_exp)


State 113

   45 relation_and_exp: relation_exp AND relation_and_exp .

    $default  reduce using rule 45 (relation_and_exp)


State 114

   18 statement: WHILE bool_exp BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 115

   19 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool_exp

    WHILE  shift, and go to state 127


State 116

   63 vars: var COMMA vars .

    $default  reduce using rule 63 (vars)


State 117

   14 statement: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET . ASSIGN expression

    ASSIGN  shift, and go to state 128


State 118

   61 var: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 61 (var)


State 119

   40 comma_sep_expressions: expression .
   41                      | expression . COMMA comma_sep_expressions

    COMMA  shift, and go to state 129

    $default  reduce using rule 40 (comma_sep_expressions)


State 120

   37 term: ident $@2 L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 121

   39 expressions: comma_sep_expressions .

    $default  reduce using rule 39 (expressions)


State 122

   53 relation_exp: NOT L_PAREN bool_exp R_PAREN .

    $default  reduce using rule 53 (relation_exp)


State 123

   47 relation_exp: NOT expression comp expression .

    $default  reduce using rule 47 (relation_exp)


State 124

   16 statement: IF bool_exp THEN statements ENDIF .

    $default  reduce using rule 16 (statement)


State 125

   17 statement: IF bool_exp THEN statements ELSE . statements ENDIF

    RETURN    shift, and go to state 32
    IF        shift, and go to state 33
    WHILE     shift, and go to state 34
    DO        shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    IDENT     shift, and go to state 5

    ident       go to state 39
    statement   go to state 40
    statements  go to state 131


State 126

   18 statement: WHILE bool_exp BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 18 (statement)


State 127

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool_exp

    TRUE     shift, and go to state 50
    FALSE    shift, and go to state 51
    NOT      shift, and go to state 52
    L_PAREN  shift, and go to state 53
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 54
    multiplicative_expression  go to state 47
    term                       go to state 48
    bool_exp                   go to state 132
    relation_and_exp           go to state 56
    relation_exp               go to state 57
    var                        go to state 49


State 128

   14 statement: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN . expression

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 133
    multiplicative_expression  go to state 47
    term                       go to state 48
    var                        go to state 49


State 129

   41 comma_sep_expressions: expression COMMA . comma_sep_expressions

    L_PAREN  shift, and go to state 43
    NUMBER   shift, and go to state 44
    IDENT    shift, and go to state 5

    ident                      go to state 45
    expression                 go to state 119
    multiplicative_expression  go to state 47
    term                       go to state 48
    comma_sep_expressions      go to state 134
    var                        go to state 49


State 130

   37 term: ident $@2 L_PAREN expressions R_PAREN .

    $default  reduce using rule 37 (term)


State 131

   17 statement: IF bool_exp THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 135


State 132

   19 statement: DO BEGINLOOP statements ENDLOOP WHILE bool_exp .

    $default  reduce using rule 19 (statement)


State 133

   14 statement: ident L_SQUARE_BRACKET expression R_SQUARE_BRACKET ASSIGN expression .

    $default  reduce using rule 14 (statement)


State 134

   41 comma_sep_expressions: expression COMMA comma_sep_expressions .

    $default  reduce using rule 41 (comma_sep_expressions)


State 135

   17 statement: IF bool_exp THEN statements ELSE statements ENDIF .

    $default  reduce using rule 17 (statement)
